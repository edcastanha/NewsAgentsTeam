@startuml Basic Sample
@startuml Sistema de Processamento de Notícias Jota

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

Person(fonte_noticias, "Source News", "Notícias de diversas fontes (agências, redes sociais, usuários)")

System_Boundary(sistema, "Sistema de Processamento de Notícias Jota") {

  Container(webhook_api, "POST API", "FastAPI", "Endpoint que recebe webhooks contendo as notícias em formato JSON.", $tags="v1.0")
  Container(fila_mensagens, "Receiver", "RabbitMQ", "Recebe as notícias, valida o JSON e enfileira para processamento.", $tags="v1.0")
  Container(classificador, "Classifier", "Python", "Classifica as notícias por categoria e extrai palavras-chave (tags).", $tags="v1.0")
  ContainerDb(banco_dados, "Database", "PostgreSQL", "Armazena as notícias classificadas (título, conteúdo, fonte, data, categoria, urgência, tags).")
  Container(api_rest, "API", "Python/Django REST", "Disponibiliza as notícias classificadas para a equipe editorial (filtragem, marcação de urgência).", $tags="v1.0+v1.1")
  Container(admin_spa, "Admin SPA", "Python/Django", "Interface para a equipe editorial acessar e gerenciar as notícias.", $tags="v1.1")
  Container(notificacoes, "Notificações WhatsApp", "Python", "Envia notificações via WhatsApp para notícias urgentes (implementação futura).")
  Container(observabilidade, "Observabilidade", "...", "Monitora o desempenho e identifica gargalos (ex: logs, métricas).")
  Container(seguranca, "Segurança", "...", "Implementa as melhores práticas de segurança.")
}

Person(equipe_editorial, "Editorial Team", "Equipe responsável por acessar e gerenciar as notícias.")

Rel(fonte_noticias, webhook_api, "Envia notícias via", "HTTPS")
Rel(webhook_api, fila_mensagens, "Envia para fila", "HTTPS")
Rel(fila_mensagens, classificador, "Consome notícias da fila")
Rel(classificador, banco_dados, "Armazena notícias classificadas")
Rel_R(api_rest, banco_dados, "Lê e escreve dados")
Rel(equipe_editorial, admin_spa, "Utiliza via", "HTTPS")
Rel(admin_spa, api_rest, "Consome API via", "HTTPS")
Rel(api_rest, notificacoes, "Envia notificações para")
Rel(sistema, observabilidade, "Monitora")
Rel(sistema, seguranca, "Aplica")

SHOW_LEGEND()
@enduml